pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--caveman
--by bitwitch
grav=.15
particles={}
cam={}
cam.x=0
cam.y=0
tut={}

debug=false

spawners={}

g_level=nil
g_man=nil



function _init()
	--don't repeat button presses
	poke(0x5f5c,255)
	--reload map from cart rom
	reload(0x2000,0x2000,0x1000)
	reset_entities()
	reset_collisions()
	init_tut()
	g_level=level({
		origin=v(0,0),
		size=v(128,16)
	})
	e_add(g_level)	
end

function _update60()
 update_particles()
 update_entities()
 do_movement()
 do_collisions()
	do_supports()
 update_cam()
end

function _draw()
 cls()
 draw_particles()
 render_all("render")
 render_all("render_gui")
-- if not tut.passed then
-- 	draw_tut()
-- end
 
 if (debug) draw_debug_hitbox()
 
 draw_stats()
end

function update_cam()
	cam.x=lerp(cam.x,g_man.pos.x-64,.2)		
	if cam.x<0 then cam.x=0 end
	camera(cam.x,cam.y)
end

function init_tut()
	tut.passed=false
	tut.steps={}
	tut.steps[1]={
		start=true,
		passed=false,
		x=64,
		y=74,
		pass_x=128,
		text="press z to jump"
	}
	tut.steps[2]={
		start=false,
		passed=false,
		x=150,
		y=108,
		pass_x=200,
		text="press ⬇️+z to roll"
	}
	tut.steps[3]={
		start=false,
		passed=false,
		x=200,
		y=74,
		pass_x=274,
		text="press ❎ to punch"
	}
end

--updates and draws tutorial
function draw_tut()
	for i,t in ipairs(tut.steps) do
		if t.start and not t.passed then
			print(t.text,t.x,t.y,7)
			if g_man.pos.x>t.pass_x then
				t.passed=true
				if i+1<=#tut.steps then
					tut.steps[i+1].start=true
				end
			end
		end
	end	
end

function draw_map()
	map(0,0,0,0,64,16)
end

function draw_stats()
	print("cpu:"..stat(1),1+cam.x,1,7)
	print("fps:"..stat(7),1+cam.x,7,7)
end








-->8
--particles

function make_flames(x,y,count)
	local i
	for i=1,count do
		p={}
		p.type="flame"
		p.x=x
		p.y=y
		p.ox=x
		p.oy=y
		p.vx=rnd(1)-.5
		p.vy=rnd(1)-1
		p.life=1
		local lifetime=20+rnd(40)
		p.decayrate=1/lifetime
		add(particles,p)
		end
end

function update_particles()
	for p in all(particles) do 
		if p.type=="flash" then
			-- smoothstep
			local t=p.life
			t=3*t*t-2*t*t*t
			--
			p.size=p.startsize*t
		elseif p.type=="flame" then
			p.vy-=.01
			p.vx*=.95
			p.vy*=.95
			p.ox=p.x
			p.oy=p.y
			p.x+=p.vx
			p.y+=p.vy
		end
		
		p.life-=p.decayrate
		if p.life<0 then
			del(particles,p)
		end
	end
end

function draw_particles()
	for p in all(particles) do
		if p.type=="flash" then
			circfill(p.x,p.y,p.size,7)
		elseif p.type=="flame" then
			local col
			if p.life>.8 then
				col=10
			elseif p.life>.5 then
				col=9
			elseif p.life>.15 then
				col=8
			else
				col=2
			end
			
			line(p.x,p.y,p.ox,p.oy,col)
		end
	end
end


-->8

-------------------------------
-- utlitities
-------------------------------
object={}
function extend(parent,props)
	local child=props or {}
	setmetatable(child,{
		__index=parent,
		__call=function(func,props)
			local o=props or {}
			setmetatable(o,{__index=child})
			if (o.init) o:init()
			return o
		end
	})
	
	return child
end

function state_dependent(e,prop)
	local p=e[prop]
	if (not p) return nil
	if type(p)=="table" and p[e.state] then
		p=p[e.state]
	end
	if type(p)=="table" and p[1] then
		p=p[1]
	end
	return p
end

function event(e,prop,args)
	if e[prop] then
		return e[prop](e,args)
	end
end

function lerp(a,b,amt)
	return (1-amt)*a+b*amt
end

-------------------------------
-- box
-------------------------------
box=extend(object)

function make_box(xl,yt,xr,yb)
	return box({
		xl=flr(min(xl,xr)),
		xr=flr(max(xl,xr)),
		yt=flr(min(yt,yb)),
		yb=flr(max(yt,yb))
	})
end

function box:translate(pos)
	return box({
		xl=self.xl+pos.x,
		xr=self.xr+pos.x,
		yt=self.yt+pos.y,
		yb=self.yb+pos.y
	})
end

function box:overlap(b)
	return
		self.xr>=b.xl and
	 self.xl<=b.xr and
	 self.yb>=b.yt and
	 self.yt<=b.yb
end

function box:sepv(b,allowed)
	local candidates={
		left=v(b.xl-self.xr,0),
		right=v(b.xr-self.xl,0),
		top=v(0,b.yt-self.yb),
		bottom=v(0,b.yb-self.yt)
	}
	if type(allowed)!="table" then
		allowed={right=true,left=true,bottom=true,top=true}
	end
	
	
	local min_sep=v(0,0)
	local min_len=32767
	local min_side=nil
 for side,sep in pairs(candidates) do
  local len=vec.len2(sep)
  if allowed[side] and
  len<min_len then
			min_sep,min_len,min_side=
				sep,len,side
  end
 end	
	return min_sep,min_side
end


-------------------------------
-- vector
-------------------------------
vec={}
vec.__index=vec

function v(x,y)
	local v={x=x,y=y}
	setmetatable(v,vec)
	return v
end

function vec.__add(v1,v2)
 return v(v1.x+v2.x,v1.y+v2.y)
end
function vec.__sub(v1,v2)
 return v(v1.x-v2.x,v1.y-v2.y)
end
function vec.__mul(v1,a)
 return v(v1.x*a,v1.y*a)
end
function vec.__div(v1,a)
 return v(v1.x/a,v1.y/a)
end
-- length squared
function vec.len2(v)
 return v.x*v.x+v.y*v.y
end

function vec.dot(v1,v2)
	return v1.x*v2.x+v1.y*v2.y
end

function vec.norm(v1)
	return v(v1.x,v1.y)/sqrt(v1:len2())
end

function vec.copy(v1)
	return v(v1.x,v1.y)
end

function vec.ints(v)
 return 
 	v(flr(v.x),flr(v.y))
end

function vec.string(v)
	return "("..v.x..","..v.y..")"
end

-------------------------------
-- entities
-------------------------------
entity=extend(object,{
	t=0,state="idle",dynamic=true
})

function reset_entities()
	entities={}
	entities_with={
		vel={},
		dynamic={},
		collides_with={},
		feetbox={},
		render={},
		render_gui={}
	}
end

function e_add(e)
	add(entities,e)
	for prop,list in pairs(entities_with) do
		if e[prop] then
		 add(list,e)
		end
	end 
	if e.tags then
		c_update_bucket(e)
	end
	return e
end

function e_remove(e)
	del(entities,e)
	for prop,list in pairs(entities_with) do
		if e[prop] then
		 del(list,e)
		end
	end
	-- remove entity from all 
	-- old buckets
	if e.bkt then
		for t in all(e.tags) do
			local old=
				c_bucket(t,e.bkt.x,e.bkt.y)
				del(old,e)
		end
	end
end

function update_entities()
	for e in all(entities_with.dynamic) do
		local state=e.state
		if (e[state]) e[state](e)
		e.t+=1
		if (state!=e.state) e.t=0
	end
end


solid=extend(entity,{
	dynamic=false,
	tags={"solid"},
	collides_with={},
	hitbox=make_box(0,0,8,8)
})

function solid:init()
	-- setup allowed collision
	-- sides 
	local dirs={
		left=v(-1,0),right=v(1,0),
		top=v(0,-1),bottom=v(0,1)
	}
	local allowed={}
	local needed=false
	for d,dvec in pairs(dirs) do
		local p=self.map_pos+dvec
		allowed[d]=
			tile_type(mget(p.x,p.y))
			!=solid
			
		-- ignore tiles on map edge
		if p.x<0 or p.x>127 or p.y<0 or p.y>63 then
			allowed[d]=false
		end
		
		needed=needed or allowed[d]
	end
	self.allowed=allowed
	self.needed=needed
end

function solid:collide(o,args)
	return c_push_out,self.allowed
end


-------------------------------
-- level
-------------------------------
level=extend(object,{
	origin=v(0,0),
	size=v(16,16)
})

function level:init()
	local o,s=self.origin,self.size
	-- loop through tiles in level
	for x=0,s.x-1 do
		for y=0,s.y-1 do
			local mx,my=o.x+x,o.y+y
			local tile=mget(mx,my)
			local etyp=spawners[tile]
			-- if tile is spawner,spawn
			-- entity
			if etyp then
				local e=etyp({
					pos=v(mx,my)*8
				})
				e_add(e)
				-- remove tile from map
				mset(mx,my,0)
				tile=0
			end
			
			-- create tile if needed 
			-- for collisions
			etyp=tile_type(tile)
			if etyp then
				local e=etyp({
					pos=v(mx,my)*8,
					map_pos=v(mx,my)
				})
				if fget(tile,1) then
					add(e.tags,"breakable")
				end
				if (e.needed) e_add(e)
			end

		end
	end
end

function level:render()
 map(self.origin.x,self.origin.y,
  0,0,self.size.x,self.size.y)
end


function tile_type(tile)
	if (fget(tile,0)) return solid
	return nil
end


-------------------------------
-- spear
-------------------------------
spear=extend(entity,{
	sprite=128,
	holder=nil,
	offset={
		idle={
			right=v(-8,-8),
			left=v(-8,-8)--facing left
		},
		attacking={
			right=v(4,-8),
			left=v(-20,-8)--facing left
		}
	},
	draw_order=3,
	state="idle",
	hitbox={
		nil,
		attacking=make_box(0,6,16,2)
	},
	collides_with={"breakable"},
	tags={"spear"}
})

function spear:init()
	if self.holder then
		local d="right"
		if (self.holder.face_left) d="left"
		local v,p=
			self.holder.vel,self.holder.pos
		local offset=self.offset.idle
		self.vel=v:copy()
		self.pos=p+offset[d]
	end
end

function spear:idle() 
	self:do_movement()
end

function spear:attacking()
	self:do_movement()
end

function spear:do_movement()
	if (not self.holder) return
	local d="right"
	if (self.holder.face_left) d="left"
	local v,p=
		self.holder.vel,
		self.holder.pos
	local offset=self.offset.idle
	if self.holder.state=="spearing" then
		offset=self.offset.attacking
	end
	self.vel=v:copy()
	self.pos=p+offset[d]
end

function spear:collide(o,args)
	e_remove(o)
	mset(o.map_pos.x,o.map_pos.y,0)
	-- only allow one object to
	-- be attacked
	self.state="idle"
end

function spear:render()
	if (not self.holder) return
	local h=self.holder
	local d="right"
	if (h.face_left) d="left"
	spr(self.sprite,
		self.pos.x,
		self.pos.y,
		2,1,h.face_left)
	pal()
end

-------------------------------
-- player (man)
-------------------------------
man=extend(entity,{
	pos=v(0,0),
	w=16,
	h=16,
	vel=v(0,0),
	acc=v(.3,0),
	jspeed=-2.666,
	roll_speed=4,
	face_left=false,
	sprite={
		idle=192,
		offset=v(-8,-16)
	},
	draw_order=2,
	hitbox={
		make_box(-6,-15,6,0),
		roll=make_box(-8,-8,8,0)
	},
	feetbox=make_box(-6,-2,6,0),
	tags={"man"},
	collides_with={"solid"},
	spear=nil
})

function man:init()
	g_man=self
	self.spear=spear({holder=self})
	e_add(self.spear)
end
spawners[112]=man

function man:idle()
	self:do_walking()
	self:do_verticals()
	self:do_attack()
end

function man:walk()
	self:do_walking()
	self:do_verticals()
	self:do_attack()
end

function man:roll()
	self.vel.x*=.8	
	
		-- clamp x pos to > 0
	if self.pos.x-8+self.vel.x<0 then
		self.vel.x=0
		self.pos.x=8
	end
	
	if abs(self.vel.x)<=0.1 then
		self.state="idle"
	end
end

function man:air()
	
end

function man:spearing()
	if self.t>6 then
		self.spear.state="idle"
		self.state="idle"
	end
end

-- multiple state functions
function man:do_walking()
	self.vel.x*=.8
	if btn(0) then
		self.vel.x-=self.acc.x
	end
	if btn(1) then
		self.vel.x+=self.acc.x
	end
	
	-- clamp x pos to > 0
	if self.pos.x-8+self.vel.x<0 then
		self.vel.x=0
		self.pos.x=8
	end
	
	if abs(self.vel.x)>0 then
		self.state="walk"
	else
		self.state="idle"
	end
end

function man:do_verticals()
--	if self.pos.y>104 then
--	 self.pos.y=104
--	 self.vel.y=0
--	end
--	
	if self.supported_by and btnp(4) then
		-- roll
		if btn(3) then
			local rspeed=self.roll_speed
			if (self.face_left) rspeed*=-1
			self.vel.x=rspeed
			self.state="roll"
		else
		-- jump
			self.vel.y=self.jspeed
		end
	end
end

function man:do_attack()
	if btnp(5) then
		-- create spear hitbox
		-- change to spear state
		self.spear.state="attacking"
		self.state="spearing"
	end
end

function man:collide(o)
end

function man:render()
	palt(14,true)
	palt(0,false)
	local p,off=self.pos,self.sprite.offset
 spr(self.sprite.idle,
 	p.x+off.x,p.y+off.y,
 	2,2,self.face_left)
	palt()
end

-------------------------------
-- sabertoothed tiger
-------------------------------
tiger=extend(entity,{
	vel=v(0,0),
	acc=v(.3,0),
	jspeed=-2,
	hunt_speed=.6,
	face_left=true,
	sprite={
		idle=240,
		hunt=240,
		offset=v(-8,-8),
		w=16,
		h=8
	},
	draw_order=1,
	hitbox={
		make_box(-6,-15,6,0),
		roll=make_box(-8,-8,8,0)
	},
	feetbox=make_box(-6,-2,6,0),
	tags={"tiger"},
	collides_with={"solid","man"}
})
spawners[113]=tiger

function tiger:idle()
	-- walk back and forth
	-- if man is within distance
	-- hunt
	self.vel.x=0.25*sin(t()*0.08)
	local d=self.pos-g_man.pos
	if d:len2()<45*45 then
--		self.state="hunt"
	end	
end

function tiger:hunt()
	-- walk towards man
	local to=g_man.pos-self.pos
	local dist=sqrt(to:len2())
	to/=dist
	self.vel.x=to.x*self.hunt_speed
	-- if man is furthan than a 
	-- certain distance, idle
	if dist>50 then
		self.state="idle"
		
	-- if man is within certain
	-- distance, attack
	elseif dist<33 then
		-- attack
	end
	


end

function tiger:render()
	local p,off=
		self.pos,self.sprite.offset
 local s=2
 sspr(0,120,
 	self.sprite.w,self.sprite.h,
 	p.x+s*off.x,p.y+s*off.y,
 	s*self.sprite.w,s*self.sprite.h,
 	self.face_left,false)
end

-------------------------------
-- fire
-------------------------------
fire=extend(entity,{})
spawners[47]=fire
function fire:render()
	local fx,fy=
		self.pos.x,self.pos.y
	spr(47,fx,fy)
	make_flames(fx+4,fy+7,5)
end

-------------------------------
-- movement system
-------------------------------
function do_movement()
	for e in all(entities_with.vel) do
		e.pos+=e.vel
		if e.vel.x!=0 then
			e.face_left=e.vel.x<0
		end
		
		-- apply gravity
		e.vel.y+=grav
	end
end

-------------------------------
-- collision system
-------------------------------
function reset_collisions()
	c_buckets={}
end

function do_collisions()
	c_update_buckets()
 for e in all(entities_with.collides_with) do
 	for tag in all(e.collides_with) do
 		for o in c_potentials(e,tag) do
				if o!=e then
					local ec,oc=
						collider(e),collider(o)
					if ec and oc then
						do_collision(ec,oc)
					end
				end
			end
		end
	end
end 

function c_update_buckets()
	for e in all(entities_with.dynamic) do
			c_update_bucket(e)
	end
end

function c_update_bucket(e)
	if not e.pos or not e.tags then
		return
	end	
	
	local bx,by=c_bucket_coords(e)
	-- if e has no bucket or pos
	-- has changed out of range
	-- of current bucket
	if not e.bkt or 
	e.bkt.x!=bx or
	e.bkt.y!=by then
		-- remove entity from all 
		-- old buckets
		if e.bkt then
			for t in all(e.tags) do
				local old=
					c_bucket(t,e.bkt.x,e.bkt.y)
					del(old,e)
			end
		end
	
		-- add entity to new buckets
		e.bkt=v(bx,by)
		for t in all(e.tags) do
			add(c_bucket(t,bx,by),e)
		end
	end
end

function c_bucket_coords(e)
	local p=e.pos
	return
		flr(shr(p.x,4)),flr(shr(p.y,4))
end

function c_bucket(tag,bx,by)
	local key=
		tag..":"..bx..","..by
	if not c_buckets[key] then
		c_buckets[key]={}
	end
	return c_buckets[key]
end

function c_potentials(e,tag)
	local cx,cy=c_bucket_coords(e)
	local bx,by=cx-2,cy-1
	local bkt,bcount,bi={},0,1
	return function()
		while bi>bcount do
			bx+=1
			if (bx>cx+1) bx,by=cx-1,by+1
			if (by>cy+1) return nil
			bkt=c_bucket(tag,bx,by)
			bcount,bi=#bkt,1
		end
		local next_e=bkt[bi]
		bi+=1
		return next_e
	end
end

function collider(e)
	local hb=
		state_dependent(e,"hitbox")
	if (not hb.translate) return nil
	return {
		box=hb:translate(e.pos),
		e=e
	}
end

function do_collision(ec,oc)
	local eb,ob=ec.box,oc.box
	if eb:overlap(ob) then
		c_response(ec,oc)
		c_response(oc,ec)
	end
end

-- checks for collisions of
-- box and entities with given
-- tags, returns first e found
function c_check(box,tags)
	local fake_e=
		{pos=v(box.xl,box.yt)}
	for t in all(tags) do
		for o in c_potentials(fake_e,t) do
			local oc=collider(o)
			if oc and box:overlap(oc.box) then
				return o
			end
		end
	end
	return nil
end

-- calls collide method on e
-- if it returns a function,
-- calls it
function c_response(ec,oc)
	local reaction,args=
		event(ec.e,"collide",oc.e)
	if type(reaction)=="function" then
		reaction(ec,oc,args)
	end
end

-- pushes other out of entity
-- so it no longer collides
function c_push_out(ec,oc,allowed)
	local eb,ob=ec.box,oc.box
	local e,o=ec.e,oc.e
	local sepv=ob:sepv(eb,allowed)	
	o.pos+=sepv
	if o.vel then
		local v_dot_sep=
			o.vel:dot(sepv)
		if v_dot_sep<0 then
			if (sepv.y!=0) o.vel.y=0
			if (sepv.x!=0) o.vel.x=0
		end
	end
	oc.box=ob:translate(sepv)
end

function draw_debug_hitbox()
	for e in all(entities_with.collides_with) do
		local hb=state_dependent(e,"hitbox")
		if hb.translate then
			hb=hb:translate(e.pos)
			rect(hb.xl,hb.yt,hb.xr,hb.yb,8)
		end
	end
end

-------------------------------
-- supports
-------------------------------

-- determines if entities
-- with feetbox are standing
-- on something
function do_supports()
	for e in all(entities_with.feetbox) do
		local fb=e.feetbox
		fb=fb:translate(e.pos)
		local support=
			c_check(fb,{"solid"})
		e.supported_by=support
	end
end


-------------------------------
-- render
-------------------------------
function render_all(prop)
	-- sort entities by draw order
	local layers={{},{},{},{}}
	for e in all(entities_with[prop]) do
		if not e.draw_order then
			add(layers[1],e)
		else
			add(layers[e.draw_order],e)
		end
	end

	for i,l in ipairs(layers) do
		for e in all(l) do
			e[prop](e)
		end
	end
end


__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004400000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044400000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444440000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444440000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444444000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444444000000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444044444400004440044444444000004444444400000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444444444440044440044444444000004444444400000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444444444440044440040444444000044444444400000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444440444444440044444040044444000444444444440000000000
00000000000000000000000000000000000000000000000000000000000000000000000044440000444444440044444000444444004444444444444000000000
00000000000000000000000000000000000000000000000000000000000000000000000044400000444444440444444000444400004444444444444000400400
00000000000000000000000000000000000000000000000000000000000000000000000044000000444444440444444000044000044444444444444404444440
00000000000000000000000000000000000000000000000000000000000000000000000040000000044444404444444400004000444444444444444466666666
00000000000000000000000000000000000000000000000000000000000000004444444433333333444444444444444444444444444444444444444400000000
00000000000000000000000000000000000000000000000000000000000000004444444433333333444444440444444444444444444444440444444400000000
00000000000000000000000000000000000000000000000000000000000000004044404434333333444444000044444444444444404444440044440000000000
00000000000000000000000000000000000000000000000000000000000000000404040434434334444444000044044444444444400444000044400000000000
00000000000000000000000000000000000000000000000000000000000000004440444044434444440440000000004444444444000440000004400000000000
00000000000000000000000000000000000000000000000000000000000000000400040044444444400400000000004444444444000040000004400000000000
00000000000000000000000000000000000000000000000000000000000000004040404044444444400000000000000444444444000000000004000000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444400000000000000444444444000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00044440090000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00404f04090000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
044f4ff4094994900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04f4ff40009999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f4f4ff4f099499900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00ffff00049994900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ffffff0007997000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff00f0ff007007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4444ff44444266660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeeee444444eee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeeee44444444ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeee44ff4fff4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeee440f4ff04ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeee4f4ff4fff4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eee4ff4ff4fff4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eee4ff4f44e4e4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee4fff4f4fe4e4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeff4ff4ff4e4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeff4ff4fffe4ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeeff4ffffefeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
efffffffffefeffe0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
effffffffffffffe0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
efeffffffffffeff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffeeeeeeeeffeeff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fffeeeeeeeffefff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000499000000000000099900000000000009990000000000000999000000000000000000000000000000000000000000000000000000000000000000
0000000000099d900000000000099990000000000009999000000000000999900000000000000000000000000000000000000000000000000000000000000000
00994999949999900099999999999990009999999999999000999999999999900000000000000000000000000000000000000000000000000000000000000000
09099949999949700909999999999990090999999999997009099999999999700000000000000000000000000000000000000000000000000000000000000000
09049000994990700909900099999070090990009999907009099000999990700000000000000000000000000000000000000000000000000000000000000000
90099000099900009009900009990000900990000999000090099000099900000000000000000000000000000000000000000000000000000000000000000000
00990000000900000099000000090000009900000009000000990000000900000000000000000000000000000000000000000000000000000000000000000000
00900000000900000090000000090000009000000009000000900000000900000000000000000000000000000000000000000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888eeeeee888888888888888888888888888888888888888888888888888888888888888888888888ff8ff8888228822888222822888888822888888228888
8888ee888ee88888888888888888888888888888888888888888888888888888888888888888888888ff888ff888222222888222822888882282888888222888
888eee8e8ee88888e88888888888888888888888888888888888888888888888888888888888888888ff888ff888282282888222888888228882888888288888
888eee8e8ee8888eee8888888888888888888888888888888888888888888888888888888888888888ff888ff888222222888888222888228882888822288888
888eee8e8ee88888e88888888888888888888888888888888888888888888888888888888888888888ff888ff888822228888228222888882282888222288888
888eee888ee888888888888888888888888888888888888888888888888888888888888888888888888ff8ff8888828828888228222888888822888222888888
888eeeeeeee888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111dd1ddd1d1d1ddd1ddd1ddd1dd11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111d111d1d1d1d1d111ddd1d1d1d1d1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1ddd1ddd11111d111ddd1d1d1dd11d1d1ddd1d1d1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111d111d1d1ddd1d111d1d1d1d1d1d1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111dd1d1d11d11ddd1d1d1d1d1d1d1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111ddd1d1d11111ddd1ddd1ddd1d1d1ddd1ddd11dd1d1d111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111d1d1d1d11111d1d11d111d11d1d11d111d11d111d1d111111111111111111111111111111111111111111111111111111111111111111111111
1ddd1ddd11111dd11ddd11111dd111d111d11d1d11d111d11d111ddd111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111d1d111d11111d1d11d111d11ddd11d111d11d111d1d111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111ddd1ddd11111ddd1ddd11d11ddd1ddd11d111dd1d1d111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16661666166111111177177111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16661616161617771171117111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16161666161611111771117711111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16161616161617771171117111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16161616161611111177177111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166616111111161611111ccc1ccc1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
16111611111116161777111c1c1c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
166116111111166611111ccc1c1c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161116111111161617771c111c1c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
161116661666161611111ccc1ccc1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1ee111ee1eee1eee11ee1ee1111111111666166116661666117111711111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111111111161161611611161171111171111111111111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e1e1111e111e11e1e1e1e111111111161161611611161171111171111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111111111161161611611161171111171111111111111111111111111111111111111111111111111111111111111111
1e1111ee1e1e11ee11e11eee1ee11e1e111116661666161616661161117111711111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111666166616611111161611111ccc111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111666161616161111161617771c1c111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616166616161111116111111ccc111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161111161617771c1c111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161171161611111ccc111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111666166616611111161611111cc11ccc1ccc1111166616111111161611111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616177711c1111c1c1c1111161116111111161611111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111666111111c11ccc1ccc1777166116111111166611111111111111111111111111111111111111111111111111111111111111111111
111116161616161611111116177711c11c111c1c1111161116111111161611111111111111111111111111111111111111111111111111111111111111111111
11111616161616161171166611111ccc1ccc1ccc1111161116661666161611111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111666166616611111161611111cc11c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616177711c11c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111616111111c11ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611111666177711c11c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161171166611111ccc1ccc11111111111111117111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111117711111111111111111111111111111111111111111111111111111111111111111111111111
11111666166616611111161611111cc11c1111111111111111117771111111111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616177711c11c1111111111111111117777111111111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111666111111c11ccc11111111111111117711111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611111616177711c11c1c11111111111111111171111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161171161611111ccc1ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661666166111111616161611111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616161617771c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111616116111111c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611111666161617771c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611711161161611111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661666166111111616161611111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616161617771c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111616166611111c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611111666111617771c1c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611711161166611111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661666166111111666111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116661616161611111616177711111c1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161666161611111666111111111ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161111161617771111111c11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111116161616161611711616111111c11ccc11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1ee11ee111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1eee11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1ee111ee1eee1eee11ee1ee1111111111616166616611666166616661171117111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111111111616161616161616116116111711111711111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e1e1111e111e11e1e1e1e111111111616166616161666116116611711111711111111111111111111111111111111111111111111111111111111
1e111e1e1e1e1e1111e111e11e1e1e1e111111111616161116161616116116111711111711111111111111111111111111111111111111111111111111111111
1e1111ee1e1e11ee11e11eee1ee11e1e111116661166161116661616116116661171117111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111616166616611666166616661111166616661661117111711111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161616161616116116111111166616161616171111171111111111111111111111111111111111111111111111111111111111111111111111111111
11111616166616161666116116611111161616661616171111171111111111111111111111111111111111111111111111111111111111111111111111111111
11111616161116161616116116111111161616161616171111171111111111111111111111111111111111111111111111111111111111111111111111111111
11111166161116661616116116661666161616161616117111711111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1ee11ee111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1ee11e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1e111e1e1e1e11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1eee1e1e1eee11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
82888222822882228888822882228882828882228888888888888888888888888888888888888888888888888228822282228882822282288222822288866688
82888828828282888888882888828828828888828888888888888888888888888888888888888888888888888828828888828828828288288282888288888888
82888828828282288888882888228828822282228888888888888888888888888888888888888888888888888828822282228828822288288222822288822288
82888828828282888888882888828828828282888888888888888888888888888888888888888888888888888828888282888828828288288882828888888888
82228222828282228888822282228288822282228888888888888888888888888888888888888888888888888222822282228288822282228882822288822288
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000010301010000000000000000000000000100000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3c3c3c3c3c3c3c3c3c3c3c3c3c3a3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3a3e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3c3c3a3b3a3b3c3c3c3c3a3d3a003b3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3a3b3a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3d3d3e000000003d3e3d3d00000000003b3c3a3b3c3c3c3c3c3c3c3c3c3a3d3e000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000003a00003b3c3c3c3c3a003b3d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000003b3c3a3e0000002a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000002c00000000002a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c3c3c3c3c3c21
000000002f000000002b000000002b000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c39393939393939393939393c3c00000000000071000000000000000000003c3c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c00000000000000000000000000000000003c3c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c293c3c3c0000000000000000000000000000003c3c3c3c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383838383800003c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
